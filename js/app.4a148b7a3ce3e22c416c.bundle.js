(self.webpackChunk=self.webpackChunk||[]).push([[524],{44:(e,t,a)=>{const s=a(377),{lightningChart:r,Themes:o,AxisScrollStrategies:i,LUT:l,regularColorSteps:n}=s,c=r({resourcesBaseUrl:new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"resources/"}).ParallelCoordinateChart({theme:o[new URLSearchParams(window.location.search).get("theme")||"darkGold"]||void 0}).setTitle("Real-Time Parallel Coordinate Chart").setAxes(["Time","A","B","C","D","E"]).setSpline(!0).forEachAxis((e=>e.setScrollStrategy(i.fittingStepped)));c.getAxis("Time").setVisible(!1);const h=(e,t)=>{let a=e;return()=>{const e=a+(2*Math.random()-1)*t;return a=e,e}},m=h(0,2),d=h(1e3,200),g=h(100,20),p=h(10,2),u=h(80,10);let C=-1e4;setInterval((()=>{const e=performance.now(),t=m(),a=d(),s=g(),r=p(),o=u();c.addSeries({automaticColorIndex:0}).setData({Time:e,A:t,B:a,C:s,D:r,E:o}),e-C>=5e3&&(c.getSeries().slice().forEach((t=>{const a=t.getData(),s=a&&a.Time;s&&e-s>=6e4&&t.dispose()})),c.setLUT({axis:c.getAxis("Time"),lut:new l({interpolate:!0,steps:n(e-6e4,e,c.getTheme().examples.intensityColorPalette).map(((e,t,a)=>({...e,color:e.color.setA(t/(a.length-1)*255)})))})}),C=e)}),50)}},e=>{e.O(0,[502],(()=>e(e.s=44))),e.O()}]);